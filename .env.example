# ======================================================
# CHAPI - Variables de Entorno
# ======================================================
# 
# ⚠️  IMPORTANTE: Este es un archivo de ejemplo
# Copia este archivo como .env y configura tus valores reales
# NUNCA subas el archivo .env al repositorio
#
# Para rotar claves comprometidas:
# 1. Genera nuevas claves inmediatamente en Azure/Telegram
# 2. Actualiza las variables de entorno
# 3. Reinicia los servicios
# ======================================================

# ======================================================
# 🔑 AZURE OPENAI (OBLIGATORIO PARA IA)
# ======================================================

# URL del endpoint de Azure OpenAI (ej: https://tu-recurso.openai.azure.com/)
AZURE_OPENAI_ENDPOINT=https://tu-recurso.openai.azure.com/

# Nombre del deployment/modelo en Azure (ej: gpt35-chapi, gpt-4-32k)
AZURE_OPENAI_DEPLOYMENT=gpt35-chapi

# API Key de Azure OpenAI (ej: 1234567890abcdef...)
# 🔒 MANTÉN ESTA CLAVE SEGURA - NO LA EXPONGAS EN FRONTEND
AZURE_OPENAI_KEY=tu-azure-openai-key-aqui

# ======================================================
# 🤖 TELEGRAM BOT (OPCIONAL)
# ======================================================

# Token del bot de Telegram (obtener de @BotFather)
# Formato: 123456789:ABCDEF...
TELEGRAM_BOT_TOKEN=tu-bot-token-aqui

# ======================================================
# 🌐 PROXY/SERVIDOR WEB
# ======================================================

# Puerto del servidor proxy (por defecto: 8000)
PORT=8000

# Host del servidor (por defecto: 0.0.0.0 para producción)
HOST=0.0.0.0

# Orígenes permitidos para CORS (separados por comas)
# En producción: solo tu dominio
# En desarrollo: incluir localhost
ALLOWED_ORIGINS=https://chapibot.pro,https://www.chapibot.pro,http://localhost:8000,http://127.0.0.1:8000

# ======================================================
# 📊 CONFIGURACIÓN OPCIONAL
# ======================================================

# Nivel de logs (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Timeout para requests a Azure OpenAI (segundos)
AZURE_TIMEOUT=30

# Rate limiting (requests por minuto por IP)
RATE_LIMIT_REQUESTS=60
RATE_LIMIT_WINDOW=1

# ======================================================
# 🔐 SEGURIDAD EN PRODUCCIÓN
# ======================================================

# Para producción, considera también:
# - Usar HTTPS siempre
# - Configurar firewall para puerto específico
# - Usar variables de entorno del sistema/Docker
# - Implementar autenticación adicional si es público
# - Monitorear logs y rate limits
# - Configurar backups de logs y métricas

# ======================================================
# 📝 EJEMPLOS DE COMANDOS
# ======================================================

# Iniciar proxy en desarrollo:
# python chapi_proxy.py

# Iniciar bot de Telegram:
# python telegram_chapi_bot.py

# Instalar dependencias:
# pip install -r requirements.txt

# Verificar configuración:
# python -c "from chapi_azure_openai import AzureOpenAIConfig; print(AzureOpenAIConfig.from_env())"